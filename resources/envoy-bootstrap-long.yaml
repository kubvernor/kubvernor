static_resources:
  secrets:
    - name: beefcake_ca
      validation_context:
        trusted_ca:
          filename: ./test_certs/beefcakeCA-gathered/beefcake.intermediate.ca-chain.cert.pem
    - name: deadbeef_ca
      validation_context:
        trusted_ca:
          filename: ./test_certs/deadbeefCA-gathered/deadbeef.intermediate.ca-chain.cert.pem          
    - name: beefcake_dublin
      tls_certificate:
        certificate_chain:
          filename: ./test_certs/beefcakeCA-gathered/beefcake-dublin.cert.pem
        private_key:
          filename: ./test_certs/beefcakeCA-gathered/beefcake-dublin.key.pem
          
    - name: beefcake_athlone
      tls_certificate:
        certificate_chain:
          filename: ./test_certs/beefcakeCA-gathered/beefcake-athlone.cert.pem
        private_key:
          filename: ./test_certs/beefcakeCA-gathered/beefcake-athlone.key.pem
          
    - name: proxy_dublin
      tls_certificate:
        certificate_chain:
          filename: ./test_certs/ng3CA-gathered/ng3-proxy-dublin.cert.pem                    
        private_key:
          filename: ./test_certs/ng3CA-gathered/ng3-proxy-dublin.key.pem          
          
    - name: deadbeef_dublin
      tls_certificate:
        certificate_chain:
          filename: ./test_certs/deadbeefCA-gathered/deadbeef-dublin.cert.pem                    
        private_key:
          filename: ./test_certs/deadbeefCA-gathered/deadbeef-dublin.key.pem                    
                    

  listeners:
    - name: listener_http1
      address:
        socket_address: { address: 127.0.0.1, port_value: 8000 }
      filter_chains:
        - name: filter_chain_http
          filter_chain_match:
            destination_port: 8000
          filters:
            - name: rbac_filter
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.rbac.v3.RBAC
                rules:
                  action: ALLOW
                  policies:
                    "localhost":
                      permissions:
                        - destination_ip:
                            address_prefix: 127.0.0.0
                            prefix_len: "24"
                      principals:
                        - any: true                          
            - name: http_gateway
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager                
                httpFilters:
                  - name: envoy.filters.http.rbac
                    typedConfig:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.rbac.v3.RBAC
                      rules:
                        action: DENY
                        policies:
                          "hostbased_http1":
                            permissions:
#                            - any: true
                            - header:
                                name: "host"
                                string_match:
                                  ignore_case: true
                                  exact: blah2.com
                            principals:
                            - header:
                                name: "host"
                                string_match:
                                  ignore_case: true
                                  exact: blah2.com
#                            - any: true                              ;  
                  - name: envoy.filters.http.local_rate_limiter
                    typedConfig:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
                      token_bucket:
                       max_tokens: "100"
                       tokens_per_fill: "100"
                       fill_interval: 1s
                  - name: envoy.filters.http.router
                    typedConfig:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                      start_child_span: false             
                codec_type: HTTP1
                route_config:
                  name: basic_http_route
                  virtual_hosts:
                    - name: backend
                      domains: ["*"]
                      routes:
                        - match:
                            prefix: "/"
                            headers:
                              - name: ":method"
                                exactMatch: "GET"
                          route:
                            cluster: cluster_http
                        - match:
                            prefix: "/"
                            headers:
                              - name: ":method"
                                exactMatch: "POST"
                          route:
                            cluster: cluster_http
    - name: listener_http2
      address:
        socket_address: { address: 127.0.0.1, port_value: 8001 }
      filter_chains:
        - name: filter_chain_http
          filter_chain_match:
            destination_port: 8001
          filters:
            - name: http_gateway
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                httpFilters:
                  - name: envoy.filters.http.rbac
                    typedConfig:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.rbac.v3.RBAC
                      rules:
                        action: ALLOW
                        policies:
                          # "authoritybased":
                          #   permissions:
                          #   - header:
                          #       name: ":authority"
                          #       string_match:                                
                          #         ignore_case: true
                          #         exact: "blah.com"
                          #   principals:
                          #   - any: true
                          "hostbased":
                            permissions:
                            - header:
                                name: "host"
                                string_match:
                                  ignore_case: true
                                  exact: "blah.com"
                            principals:
                            - any: true                                                
                  - name: envoy.filters.http.local_rate_limiter
                    typedConfig:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
                      token_bucket:
                       max_tokens: "1"
                       tokens_per_fill: "1"
                       fill_interval: 5s
                  - name: envoy.filters.http.router
                    typedConfig:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                      start_child_span: false
                codec_type: HTTP2
                route_config:
                  name: basic_http_route
                  virtual_hosts:
                    - name: backend
                      domains: ["*"]
                      routes:
                        - match:
                            prefix: "/"
                            headers:
                              - name: ":method"
                                exactMatch: "GET"
                          route:
                            cluster: cluster_http
                        - match:
                            prefix: "/"
                            headers:
                              - name: ":method"
                                exactMatch: "POST"
                          route:
                            cluster: cluster_http                            

    - name: listener_https_1
      address:
        socket_address: { address: 127.0.0.1, port_value: 8443 }
      listener_filters:
  ##### Envoy needs it to pass SNI to select different filterchains
        - name: listener_https_1_tls_inspector
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.listener.tls_inspector.v3.TlsInspector
            enable_ja3_fingerprinting: false

      filter_chains:
        - name: filter_chain_http
          filter_chain_match:
            server_names: [athlone_2.beefcake.com]
            destination_port: 8443
          filters:
            - name: http_gateway
              typedConfig:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                httpFilters:
                  - name: envoy.filters.http.router
                    typedConfig:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router                
                      start_child_span: false
                codec_type: HTTP1
                route_config:
                  name: basic_http_route
                  virtual_hosts:
                    - name: backend
                      domains: ["*"]
                      routes:
                        - match:
                            prefix: "/"
                            headers:
                              - name: ":method"
                                exact_match: "GET"
                          route:
                            cluster: cluster_https_1
                        - match:
                            prefix: "/"
                            headers:
                              - name: ":method"
                                exact_match: "POST"
                          route:
                            cluster: cluster_https_1

          transport_socket:
            name: envoy.transport_sockets.tls
            typedConfig:
              '@type': type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              requireClientCertificate: false
              full_scan_certs_on_sni_mismatch: true
              common_tls_context:
                alpn_protocols: [http/1.1]
                tls_params:
                  tls_minimum_protocol_version: TLSv1_2
                  tls_maximum_protocol_version: TLSv1_2
                  
                validation_context_sds_secret_config:
                  name: beefcake_ca


                tls_certificate_sds_secret_configs:
                  - name: beefcake_dublin
                  - name: beefcake_athlone
                  - name: proxy_dublin
                  - name: deadbeef_dublin
                    

    - name: listener_https_2
      address:
        socket_address: { address: 127.0.0.1, port_value: 9443 }
      filter_chains:
        - name: filter_chain_http
          filter_chain_match:
            destination_port: 9443
          filters:
            - name: http_gateway
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                httpFilters:
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router                
                      start_child_span: false
                codecType: HTTP2
                routeConfig:
                  name: basic_http_route
                  virtual_hosts:
                    - name: backend
                      domains: ["*"]
                      routes:
                        - match:
                            prefix: "/"
                            headers:
                              - name: ":method"
                                exact_match: "GET"
                          route:
                            cluster: cluster_https_2
                        - match:
                            prefix: "/"
                            headers:
                              - name: ":method"
                                exact_match: "POST"
                          route:
                            cluster: cluster_https_2

          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              '@type': type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              requireClientCertificate: false
              common_tls_context:
                alpn_protocols: [h2,http/1.1]
                tls_params:
                  tls_minimum_protocol_version: TLSv1_3
                  tls_maximum_protocol_version: TLSv1_3                
                validation_context:
                 trusted_ca:
                   filename: ./test_certs/deadbeefCA-gathered/deadbeef.intermediate.ca-chain.cert.pem                             
                #  matchTypedSubjectAltNames:
                #    - sanType: DNS
                #      matcher:
                #        exact: client.test
                tls_certificates:
                  - certificate_chain:
                      filename: ./test_certs/ng3CA-gathered/ng3-proxy-dublin.cert.pem
                    private_key:
                      filename: ./test_certs/ng3CA-gathered/ng3-proxy-dublin.key.pem
                  - certificate_chain:
                      filename: ./test_certs/ng3CA-gathered/ng3-proxy-athlone.cert.pem
                    private_key:
                      filename: ./test_certs/ng3CA-gathered/ng3-proxy-athlone.key.pem
                  - certificate_chain:
                      filename: ./test_certs/beefcakeCA-gathered/beefcake-dublin.cert.pem
                    private_key:
                      filename: ./test_certs/beefcakeCA-gathered/beefcake-dublin.key.pem
                  - certificate_chain:
                      filename: ./test_certs/beefcakeCA-gathered/beefcake-athlone.cert.pem
                    private_key:
                      filename: ./test_certs/beefcakeCA-gathered/beefcake-athlone.key.pem                      
                  - certificate_chain:
                      filename: ./test_certs/deadbeefCA-gathered/deadbeef-dublin.cert.pem
                    private_key:
                      filename: ./test_certs/deadbeefCA-gathered/deadbeef-dublin.key.pem                                                  
                            
    - name: listener_tcp
      address:
        socket_address: { address: 127.0.0.1, port_value: 8002 }
      filter_chains:
        - name: filter_chain_tcp
          filter_chain_match:
            destination_port: 8002
          filters:
            - name: tcp_proxy_filter
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
                stat_prefix: ingress_tcp
                cluster: cluster_tcp

    - name: listener_https_no_client_auth_validation
      address:
        socket_address: { address: 127.0.0.1, port_value: 8444 }
      filter_chains:
        - name: filter_chain_http
          filters:
            - name: http_gateway
              typedConfig:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager                 
                httpFilters:                  
                  - name: envoy.filters.http.router
                    typedConfig:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                      start_child_span: false
                route_config:
                  name: basic_http_route
                  virtual_hosts:
                    - name: backend
                      domains: ["*"]

          transport_socket:
            name: envoy.transport_sockets.tls
            typedConfig:
              '@type': type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              common_tls_context:
                alpn_protocols: [h2,http/1.1]
                tls_certificate_sds_secret_configs:
                  - name: beefcake_dublin


  clusters:
    - name: cluster_http
      connect_timeout: 0.25s
      type: STATIC
      lb_policy: ROUND_ROBIN
      common_lb_config:
        locality_weighted_lb_config: {}
        
      # load_balancing_policy:
      #   policies:
      #     - typed_extension_config:
      #         name: Maglev
      #         typed_config:
      #           "@type": type.googleapis.com/envoy.extensions.load_balancing_policies.maglev.v3.Maglev
      #           table_size: 13         
      typed_extension_protocol_options:
        envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
          "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
          upstream_http_protocol_options:
            auto_sni: true
          common_http_protocol_options:
            idle_timeout: 1s
          explicit_http_config:
             http_protocol_options:
               allow_absolute_url: true
              

      load_assignment:
        cluster_name: cluster_http
        endpoints:            
          - locality:
              region: europe
              zone: ireland
              sub_zone: dublin
            priority: 0
            load_balancing_weight: 1
            lb_endpoints:
              - endpoint:                  
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 4001
                load_balancing_weight: 1
              - endpoint:                
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 4002
                load_balancing_weight: 1                      
          - locality:
              region: europe
              zone: ireland
              sub_zone: galway
            priority: 0
            load_balancing_weight: 1
            lb_endpoints:
              - endpoint:                
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 4005
                load_balancing_weight: 1                      
              - endpoint:                
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 4006
                load_balancing_weight: 1
    - name: cluster_https_1
      connect_timeout: 0.25s
      type: STATIC
      lb_policy: ROUND_ROBIN
      common_lb_config:
        locality_weighted_lb_config: {}
        
      typed_extension_protocol_options:
        envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
          "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions            
# either explicit_http_config or auto config
# in explicit_http_config either http1 or http2
          explicit_http_config:
            http_protocol_options:
               allow_absolute_url: true          
          # explicit_http_config:
          #   http2_protocol_options:
          #     initial_stream_window_size: "700000"
          #     max_concurrent_streams: "100"
          # auto_config:
          #   http_protocol_options:
          #      allow_absolute_url: true
          #   http2_protocol_options:
          #     initial_stream_window_size: "700000"
          #     max_concurrent_streams: "100"
            
      load_assignment:
        cluster_name: cluster_https
        endpoints:            
          - locality:
              region: europe
              zone: ireland
              sub_zone: dublin
            priority: 0
            load_balancing_weight: 50
            lb_endpoints:
              - endpoint:                  
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 5001
                load_balancing_weight: 1
              - endpoint:                
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 5002
                load_balancing_weight: 1                      
          - locality:
              region: europe
              zone: ireland
              sub_zone: galway
            priority: 1
            load_balancing_weight: 1
            lb_endpoints:
              - endpoint:                
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 5005
                load_balancing_weight: 1                      
              - endpoint:                
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 5006
                load_balancing_weight: 1

      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          '@type': type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
### Supported will either provide appropriate cert at the downstream or disable validation          
#          sni: buffy.vam.sl
          common_tls_context:
            alpn_protocols: [http/1.1, h2]
            tls_params:
              tls_minimum_protocol_version: TLSv1_2
              tls_maximum_protocol_version: TLSv1_2
            # tls_certificates:
            #   - certificate_chain:
            #       filename: ./test_certs/beefcakeCA-gathered/beefcake-athlone.cert.pem
            #     private_key:
            #       filename: ./test_certs/beefcakeCA-gathered/beefcake-athlone.key.pem
              # - certificatechain:
              #     filename: ./test_certs/beefcakeCA-gathered/beefcake-dublin.cert.pem
              #   private_key:
              #     filename: ./test_certs/beefcakeCA-gathered/beefcake-dublin.key.pem              
                  
              # - certificatechain:
              #     filename: ./test_certs/ng3CA-gathered/ng3-proxy-dublin.cert.pem
              #   private_key:
              #     filename: ./test_certs/ng3CA-gathered/ng3-proxy-dublin.key.pem
            # DANGEROUS WILL NOT VALIDATE THE CERT FROM THE UPSTREAM
            validation_context:
              trusted_ca:
                filename: ./test_certs/beefcakeCA-gathered/beefcake.intermediate.ca-chain.cert.pem
                
    - name: cluster_https_2
      connect_timeout: 0.25s
      type: STATIC
      lb_policy: ROUND_ROBIN
      common_lb_config:
        locality_weighted_lb_config: {}
        
      typed_extension_protocol_options:
        envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
          "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
          upstream_http_protocol_options:
            auto_sni: true
          common_http_protocol_options:
            idle_timeout: 1s

            
# either explicit_http_config or auto config
# in explicit_http_config either http1 or http2
          # explicit_http_config:
          #   http2_protocol_options:
          #     initial_stream_window_size: "700000"
          #     max_concurrent_streams: "100"
          auto_config:
            http_protocol_options:
               allow_absolute_url: true
            http2_protocol_options:
              initial_stream_window_size: "700000"
              max_concurrent_streams: "100"
            
      load_assignment:
        cluster_name: cluster_https
        endpoints:            
          - locality:
              region: europe
              zone: ireland
              sub_zone: dublin
            priority: 0
            load_balancing_weight: 50
            lb_endpoints:
              - endpoint:                  
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 5001
                load_balancing_weight: 1
              - endpoint:                
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 5002
                load_balancing_weight: 1                      
          - locality:
              region: europe
              zone: ireland
              sub_zone: galway
            priority: 1
            load_balancing_weight: 1
            lb_endpoints:
              - endpoint:                
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 5005
                load_balancing_weight: 1                      
              - endpoint:                
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 5006
                load_balancing_weight: 1                
                
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          '@type': type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext          
          common_tls_context:
            alpn_protocols: [h2,http/1.1]
            tls_params:
              tls_minimum_protocol_version: TLSv1_2
              tls_maximum_protocol_version: TLSv1_2            
            tls_certificates:
              - certificate_chain:
                  filename: ./test_certs/beefcakeCA-gathered/beefcake-athlone.cert.pem
                private_key:
                  filename: ./test_certs/beefcakeCA-gathered/beefcake-athlone.key.pem
## PROBLEM, depending on the configuration in the strict mode client needs to respond with certificate that matches the domain in http request which comes from the downstream
## so if client requests dublin_1 we need to respond with SAN dublin_1 or a wildcard... otherwise we need to disable the cert validation... or disable SNI in client config
            validation_context:
              trusted_ca:
                filename: ./test_certs/beefcakeCA-gathered/beefcake.intermediate.ca-chain.cert.pem
#                filename: ./test_certs/ng3CA-gathered/ng3.intermediate.ca-chain.cert.pem

    - name: cluster_tcp
      connect_timeout: 0.25s
      type: STATIC
      lb_policy: ROUND_ROBIN

### TODO at the moment we need it to be set up, even though Envoy is happy to proceed with no http protocol options and use the default      
      # typed_extension_protocol_options:
      #   envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
      #     "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
      #     upstream_http_protocol_options:
      #       auto_sni: true
      #     common_http_protocol_options:
      #       idle_timeout: 1s
      #     auto_config:
      #       http_protocol_options:
      #          allow_absolute_url: true

               
      load_assignment:
        cluster_name: cluster_tcp
        endpoints:            
          - locality:
              region: europe
              zone: ireland
              sub_zone: dublin
            priority: 5
            lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 4003
                load_balancing_weight: 1
              - endpoint:
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 4004
                load_balancing_weight: 1
          - locality:
              region: europe
              zone: ireland
              sub_zone: galway
            priority: 3
            lb_endpoints:
              - endpoint:                
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 4005
                load_balancing_weight: 1                                        
              - endpoint:                
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 4006
                load_balancing_weight: 1

